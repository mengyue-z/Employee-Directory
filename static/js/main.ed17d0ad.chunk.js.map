{"version":3,"sources":["components/Heading/index.js","utils/API.js","components/Container/index.js","components/SearchBar/index.js","components/EmployeeRow/index.js","components/SearchResults/index.js","components/Search/index.js","App.js","index.js"],"names":["Heading","className","axios","get","Container","props","fluid","children","SearchBar","placeholder","value","search","onChange","handleInputChange","EmployeeRow","src","image","name","phone","email","dob","renderRow","employees","first","last","picture","thumbnail","date","slice","SearchResults","onClick","sortResults","results","map","Search","state","filtered_results","sortDirection","event","input","target","toLowerCase","filter","result","includes","setState","API","then","res","data","console","log","catch","err","a","b","this","nextSortDirection","filtered_results_copy","sort","sortHelper","bind","filtered_results_phone","style","minHeight","Component","App","ReactDOM","render","document","getElementById"],"mappings":"8PAYeA,MATf,WACE,OACE,sBAAKC,UAAU,UAAf,UACE,oDACA,gH,wDCLS,EACO,WAClB,OAAOC,IAAMC,IAAI,iDCENC,MAJf,SAAmBC,GACjB,OAAO,qBAAKJ,UAAS,mBAAcI,EAAMC,MAAQ,SAAW,IAArD,SAA4DD,EAAME,Y,MCe5DC,MAdf,SAAmBH,GACjB,OACE,sBAAMJ,UAAU,aAAhB,SACE,qBAAKA,UAAU,aAAf,SACE,uBACAQ,YAAc,SACZC,MAAOL,EAAMM,OACbC,SAAUP,EAAMQ,yB,YCMXC,MAdf,SAAqBT,GACjB,OACA,gCACI,qBAAIJ,UAAY,eAAhB,UACA,6BAAI,qBAAKc,IAAKV,EAAMW,MAAOf,UAAY,aACvC,6BAAKI,EAAMY,OACX,6BAAKZ,EAAMa,QACX,6BAAKb,EAAMc,QACX,6BAAKd,EAAMe,YCPnB,SAASC,EAAUC,GACjB,OAAO,cAAC,EAAD,CAEPL,KAAQK,EAAUL,KAAKM,MAAQ,IAAMD,EAAUL,KAAKO,KACpDR,MAASM,EAAUG,QAAQC,UAC3BR,MAASI,EAAUJ,MACnBC,MAAQG,EAAUH,MAClBC,IAAME,EAAUF,IAAIO,KAAKC,MAAM,EAAE,KAL1BN,EAAUH,OA0BJU,MAlBf,SAAuBxB,GACrB,OACE,wBAAOJ,UAAY,iBAAnB,UACI,gCACN,+BACE,uCACA,oBAAI6B,QAASzB,EAAM0B,YAAnB,kBAEA,oBAAID,QAASzB,EAAM0B,YAAnB,mBACA,oBAAID,QAASzB,EAAM0B,YAAnB,mBACA,oBAAID,QAASzB,EAAM0B,YAAnB,sBAGD1B,EAAM2B,QAAQC,IAAIZ,OCiFNa,E,4MArGbC,MAAQ,CACNxB,OAAQ,GACRqB,QAAS,GACTI,iBAAkB,GAClBC,cAAc,O,EAYhBxB,kBAAoB,SAAAyB,GAClB,IAAMC,EAAQD,EAAME,OAAO9B,MAAM+B,cAC7BL,EAAmB,EAAKD,MAAMH,QAAQU,QAAO,SAAAC,GAAM,OAAIA,EAAO1B,KAAKM,MAAMkB,cAAcG,SAASL,IACjGI,EAAO1B,KAAKO,KAAKiB,cAAcG,SAASL,IACxCI,EAAOxB,MAAMsB,cAAcG,SAASL,IACpCI,EAAOzB,MAAM0B,SAASL,IACtBI,EAAOvB,IAAIO,KAAKC,MAAM,EAAE,IAAIgB,SAASL,MACxC,EAAKM,SAAS,CAAElC,OAAQ4B,EACxBH,iBAAkBA,IACL,IAATG,GACF,EAAKM,SAAS,CAACT,iBAAkB,EAAKD,MAAMH,W,uDAlBhD,WAAqB,IAAD,OAClBc,IACGC,MAAK,SAAAC,GACJ,EAAKH,SAAS,CAAEb,QAASgB,EAAIC,KAAKjB,QAASI,iBAAkBY,EAAIC,KAAKjB,UACtEkB,QAAQC,IAAIH,EAAIC,KAAKjB,YACtBoB,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,Q,wBAgB9B,SAAWC,EAAEC,GACX,MAA8B,OAA1BC,KAAKrB,MAAME,cAEXiB,EAAErC,KAAKM,MAAQgC,EAAEtC,KAAKM,MACjB,EACE+B,EAAErC,KAAKM,QAAUgC,EAAEtC,KAAKM,MAC1B,GAEC,EAEyB,OAA1BiC,KAAKrB,MAAME,cAChBiB,EAAErC,KAAKM,MAAQgC,EAAEtC,KAAKM,OAChB,EACC+B,EAAErC,KAAKM,QAAUgC,EAAEtC,KAAKM,MAC1B,EAEA,OANJ,I,yBAUP,WACE,IAAIkC,EACAC,EAAqB,YAAOF,KAAKrB,MAAMC,kBAC3CsB,EAAsBC,KAAKH,KAAKI,WAAWC,KAAKL,OAChB,OAA5BA,KAAKrB,MAAME,cACboB,EAAoB,MACiB,OAA5BD,KAAKrB,MAAME,gBACpBoB,EAAoB,OAEtBD,KAAKX,SAAS,CAACT,iBAAkBsB,EAAuBrB,cAAeoB,M,0BAGzE,WACE,IAAIA,EACAC,EAAqB,YAAOF,KAAKrB,MAAMC,kBAC3CsB,EAAsBC,KAAKH,KAAKI,WAAWC,KAAKL,OAChB,OAA5BA,KAAKrB,MAAME,cACboB,EAAoB,MACiB,OAA5BD,KAAKrB,MAAME,gBACpBoB,EAAoB,OAEtBD,KAAKX,SAAS,CAACT,iBAAkBsB,EAAuBrB,cAAeoB,M,yBAEzE,WACE,IAAIA,EACAK,EAAsB,YAAON,KAAKrB,MAAMC,kBAC5C0B,EAAuBH,KAAKH,KAAKI,WAAWC,KAAKL,OACjB,OAA5BA,KAAKrB,MAAME,cACboB,EAAoB,MACiB,OAA5BD,KAAKrB,MAAME,gBACpBoB,EAAoB,OAEtBD,KAAKX,SAAS,CAACT,iBAAkB0B,EAAwBzB,cAAeoB,M,oBAI1E,WACE,OACE,8BACE,eAAC,EAAD,CAAWM,MAAO,CAAEC,UAAW,OAA/B,UACE,cAAC,EAAD,CACEnD,kBAAmB2C,KAAK3C,oBAE1B,cAAC,EAAD,CACAkB,YAAeyB,KAAKzB,YAAY8B,KAAKL,MACrCxB,QAASwB,KAAKrB,MAAMC,4B,GA/FT6B,aCONC,MAVf,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,Q,YCDNC,IAASC,OAAO,8BACZ,cAAC,EAAD,MACIC,SAASC,eAAe,W","file":"static/js/main.ed17d0ad.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Heading() {\n  return (\n    <div className=\"heading\">\n      <h1>Employee Directory</h1>\n      <p>Click on table headers to sort or use the search box to narrow your results</p>\n    </div>\n  );\n}\n\nexport default Heading;\n","import axios from \"axios\";\n\nexport default {\n  getRandomEmployees: function() {\n    return axios.get(\"https://randomuser.me/api/?nat=us&results=30\");\n  },\n};\n","import React from \"react\";\n\nfunction Container(props) {\n  return <div className={`container${props.fluid ? \"-fluid\" : \"\"}`}>{props.children}</div>;\n}\n\nexport default Container;\n","import React from \"react\";\nimport \"./style.css\";\n\n// Using the datalist element we can create autofill suggestions based on the props.breeds array\nfunction SearchBar(props) {\n  return (\n    <form className=\"search-bar\">\n      <div className=\"form-group\">\n        <input\n        placeholder = \"Search\"\n          value={props.search}\n          onChange={props.handleInputChange}\n        />\n      </div>\n    </form>\n  );\n}\n\nexport default SearchBar;\n","import React from \"react\"\nimport \"./style.css\"\n\nfunction EmployeeRow(props) {\n    return(\n    <tbody>\n        <tr className = \"employee-row\">\n        <th><img src={props.image} className = \"avatar\" /></th>\n        <th>{props.name}</th>\n        <th>{props.phone}</th>\n        <th>{props.email}</th>\n        <th>{props.dob}</th>\n        </tr>\n    </tbody>\n    )\n}\n\nexport default EmployeeRow;","import React from \"react\";\nimport \"./style.css\";\nimport EmployeeRow from \"../EmployeeRow\";\n\nfunction renderRow(employees) {\n  return <EmployeeRow \n  key = {employees.email}\n  name = {employees.name.first + \" \" + employees.name.last}\n  image = {employees.picture.thumbnail}\n  phone = {employees.phone}\n  email ={employees.email}\n  dob ={employees.dob.date.slice(0,10)}\n  />\n}\nfunction SearchResults(props) {\n  return (\n    <table className = \"employee-table\">\n        <thead>\n  <tr>\n    <th>Image</th>\n    <th onClick={props.sortResults}>Name\n    </th>\n    <th onClick={props.sortResults}>Phone</th>\n    <th onClick={props.sortResults}>Email</th>\n    <th onClick={props.sortResults} >DOB</th>\n  </tr>\n  </thead>\n  {props.results.map(renderRow)}\n</table>\n  );\n}\n\nexport default SearchResults;\n\n","import React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport Container from \"../Container\";\nimport SearchBar from \"../SearchBar\";\nimport SearchResults from \"../SearchResults\";\n\nclass Search extends Component {\n  state = {\n    search: \"\",\n    results: [],\n    filtered_results: [],\n    sortDirection:\"ASC\"\n  };\n\n  // When the component mounts, get a list of all available base breeds and update this.state.breeds\n  componentDidMount() {\n    API.getRandomEmployees()\n      .then(res => {\n        this.setState({ results: res.data.results, filtered_results: res.data.results})\n        console.log(res.data.results)})\n      .catch(err => console.log(err));\n  }\n\n  handleInputChange = event => {\n    const input = event.target.value.toLowerCase();\n    var filtered_results = this.state.results.filter(result => result.name.first.toLowerCase().includes(input) \n    || result.name.last.toLowerCase().includes(input) \n    || result.email.toLowerCase().includes(input) \n    || result.phone.includes(input) \n    || result.dob.date.slice(0,10).includes(input))\n    this.setState({ search: input,\n    filtered_results: filtered_results });\n    if (input == \"\") {\n      this.setState({filtered_results: this.state.results})\n    }\n  };\n  sortHelper(a,b){\n    if (this.state.sortDirection==\"ASC\"){\n\n    if (a.name.first > b.name.first) {\n      return 1;\n    } else if (a.name.first === b.name.first){\n      return 0;\n    } else {\n      return -1;\n    }\n  } else if (this.state.sortDirection==\"DSC\"){\n    if (a.name.first > b.name.first) {\n      return -1;\n    } else if (a.name.first === b.name.first){\n      return 0;\n    } else {\n      return 1;\n    }\n  } \n}\n  sortResults(){\n    var nextSortDirection\n    var filtered_results_copy = [...this.state.filtered_results];\n    filtered_results_copy.sort(this.sortHelper.bind(this))\n    if (this.state.sortDirection == \"ASC\"){\n      nextSortDirection = \"DSC\"\n    } else if (this.state.sortDirection == \"DSC\"){\n      nextSortDirection = \"ASC\"\n    } \n    this.setState({filtered_results: filtered_results_copy, sortDirection: nextSortDirection})\n  }\n\n  sortResults2(){\n    var nextSortDirection\n    var filtered_results_copy = [...this.state.filtered_results];\n    filtered_results_copy.sort(this.sortHelper.bind(this))\n    if (this.state.sortDirection == \"ASC\"){\n      nextSortDirection = \"DSC\"\n    } else if (this.state.sortDirection == \"DSC\"){\n      nextSortDirection = \"ASC\"\n    } \n    this.setState({filtered_results: filtered_results_copy, sortDirection: nextSortDirection})\n  }\n  sortbyPhone(){\n    var nextSortDirection\n    var filtered_results_phone = [...this.state.filtered_results];\n    filtered_results_phone.sort(this.sortHelper.bind(this))\n    if (this.state.sortDirection == \"ASC\"){\n      nextSortDirection = \"DSC\"\n    } else if (this.state.sortDirection == \"DSC\"){\n      nextSortDirection = \"ASC\"\n    } \n    this.setState({filtered_results: filtered_results_phone, sortDirection: nextSortDirection})\n  }\n\n\n  render() {\n    return (\n      <div>\n        <Container style={{ minHeight: \"80%\" }}>\n          <SearchBar\n            handleInputChange={this.handleInputChange}\n          />\n          <SearchResults \n          sortResults = {this.sortResults.bind(this)}\n          results={this.state.filtered_results} />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React from \"react\";\nimport Heading from \"./components/Heading\";\nimport Search from \"./components/Search\"\nfunction App() {\n  return (\n    <div>\n      <Heading />\n      <Search />\n \n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<div>\n    <App />\n</div>, document.getElementById('root'));\n"],"sourceRoot":""}