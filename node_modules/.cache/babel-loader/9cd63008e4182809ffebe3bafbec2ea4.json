{"ast":null,"code":"var _jsxFileName = \"/Users/zhangmengyue/Desktop/Employee-Directory/src/components/Search/index.js\";\nimport React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport Container from \"../Container\";\nimport SearchBar from \"../SearchBar\";\nimport SearchResults from \"../SearchResults\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      search: \"\",\n      results: []\n    };\n\n    this.handleInputChange = event => {\n      var filtered_results = this.state.results.filter(result => result.name.first.includes(event.target.value));\n      this.setState({\n        search: event.target.value,\n        results: filtered_results\n      });\n    };\n  }\n\n  // When the component mounts, get a list of all available base breeds and update this.state.breeds\n  componentDidMount() {\n    API.getRandomEmployees().then(res => {\n      this.setState({\n        results: res.data.results\n      });\n      console.log(res.data.results);\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        style: {\n          minHeight: \"80%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n          handleInputChange: this.handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SearchResults, {\n          results: this.state.results\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/zhangmengyue/Desktop/Employee-Directory/src/components/Search/index.js"],"names":["React","Component","API","Container","SearchBar","SearchResults","Search","state","search","results","handleInputChange","event","filtered_results","filter","result","name","first","includes","target","value","setState","componentDidMount","getRandomEmployees","then","res","data","console","log","catch","err","render","minHeight"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;;;AAEA,MAAMC,MAAN,SAAqBL,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC7BM,KAD6B,GACrB;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,OAAO,EAAE;AAFH,KADqB;;AAAA,SAe7BC,iBAf6B,GAeTC,KAAK,IAAI;AAC3B,UAAIC,gBAAgB,GAAG,KAAKL,KAAL,CAAWE,OAAX,CAAmBI,MAAnB,CAA0BC,MAAM,IAAIA,MAAM,CAACC,IAAP,CAAYC,KAAZ,CAAkBC,QAAlB,CAA2BN,KAAK,CAACO,MAAN,CAAaC,KAAxC,CAApC,CAAvB;AACA,WAAKC,QAAL,CAAc;AAAEZ,QAAAA,MAAM,EAAEG,KAAK,CAACO,MAAN,CAAaC,KAAvB;AACdV,QAAAA,OAAO,EAAEG;AADK,OAAd;AAED,KAnB4B;AAAA;;AAM7B;AACAS,EAAAA,iBAAiB,GAAG;AAClBnB,IAAAA,GAAG,CAACoB,kBAAJ,GACGC,IADH,CACQC,GAAG,IAAI;AACX,WAAKJ,QAAL,CAAc;AAAEX,QAAAA,OAAO,EAAEe,GAAG,CAACC,IAAJ,CAAShB;AAApB,OAAd;AACAiB,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACC,IAAJ,CAAShB,OAArB;AAA8B,KAHlC,EAIGmB,KAJH,CAISC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAJhB;AAKD;;AAQDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAlB;AAAA,gCACE,QAAC,SAAD;AACE,UAAA,iBAAiB,EAAE,KAAKrB;AAD1B;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,aAAD;AAAe,UAAA,OAAO,EAAE,KAAKH,KAAL,CAAWE;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAhC4B;;AAmC/B,eAAeH,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport Container from \"../Container\";\nimport SearchBar from \"../SearchBar\";\nimport SearchResults from \"../SearchResults\";\n\nclass Search extends Component {\n  state = {\n    search: \"\",\n    results: [],\n  };\n\n  // When the component mounts, get a list of all available base breeds and update this.state.breeds\n  componentDidMount() {\n    API.getRandomEmployees()\n      .then(res => {\n        this.setState({ results: res.data.results })\n        console.log(res.data.results)})\n      .catch(err => console.log(err));\n  }\n\n  handleInputChange = event => {\n    var filtered_results = this.state.results.filter(result => result.name.first.includes(event.target.value))\n    this.setState({ search: event.target.value,\n    results: filtered_results });\n  };\n\n  render() {\n    return (\n      <div>\n        <Container style={{ minHeight: \"80%\" }}>\n          <SearchBar\n            handleInputChange={this.handleInputChange}\n          />\n          <SearchResults results={this.state.results} />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}